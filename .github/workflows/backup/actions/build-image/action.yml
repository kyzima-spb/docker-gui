inputs:
  image:
    required: true
    type: string
  release:
    required: true
    type: string
  latest:
    required: false
    type: boolean
    default: false
  push:
    required: false
    type: boolean
    default: false
  docker-username:
    required: true
    type: string
  docker-password:
    required: true
    type: string

runs:
  using: composite
  steps:    
    -
      name: Docker meta
      uses: docker/metadata-action@v5
      id: meta
      with:
        images: |
          ${{ inputs.image }}
#ghcr.io/${{ github.repository_owner }}/${{ vars.GHCR_PACKAGE_NAME }}
        tags: |
          ${{ inputs.release }}
        flavor: |
          latest=${{ inputs.latest }}
    -
      name: Set CACHE_IMAGE environment variable
      shell: bash
      run: echo "CACHE_IMAGE=${{ inputs.image }}:buildcache-${{ steps.meta.outputs.version }}" >> $GITHUB_ENV
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    -
      name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ inputs.docker-username }}
        password: ${{ inputs.docker-password }}
    # -
    #   name: Login to GitHub Container Registry
    #   uses: docker/login-action@v3
    #   with:
    #     registry: ghcr.io
    #     username: ${{ github.repository_owner }}
    #     password: ${{ secrets.GITHUB_TOKEN }}
    -
      if: ${{ fromJSON(inputs.push) }}
      name: Build and push
      uses: docker/build-push-action@v6
      with:
        context: ./docker/root
        file: ./docker/Dockerfile
        build-args: |
          RELEASE=${{ inputs.release }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        annotations: ${{ steps.meta.outputs.annotations }}
        cache-from: type=registry,ref=${{ env.CACHE_IMAGE }}
        cache-to: type=registry,ref=${{ env.CACHE_IMAGE }},mode=max
        push: true
